cert-manager-issuer:
  # Enter your email address to receive important notices from Let's Encrypt:
  email: "fred@example.com"

echo-http-server:
  enabled: false
  # Enter your domain name for the echo test service:
  hostname: "echo.example.com"
  service: echo-http-server
  enableHttps: true
  certificateIssuer: letsencrypt-prod

echo-socket-server:
  enabled: false
  service: echo-socket-server

lbrycrd:
  enabled: true
  image:
    repository: lbry/lbrycrd
    tag: linux-x86_64-production
    pullPolicy: Always
  service:
    port: 9246
    rpcPort: 9245
  persistence:
    enabled: true
    accessMode: ReadWriteOnce
    size: 50Gi
    annotations:
      "helm.sh/resource-policy": keep    
  configurationFile:
    lbrycrd.conf: |-
      datadir=/data
      rpcuser=lbry
      rpcpassword=lbry
      regtest=0
      txindex=1
      rpcallowip=10.244.0.0/16
      server=1
      listen=1
      daemon=0
      externalip=

chainquery-mysql:
  nameOverride: chainquery-mysql
  enabled: false
  mysqlUser: chainquery
  mysqlPassword: chainquery
  mysqlDatabase: chainquery
  persistence:
    enabled: true
    accessMode: ReadWriteOnce
    size: 100Gi
    annotations:
      "helm.sh/resource-policy": keep

chainquery:
  enabled: false
  image:
    repository: lbry/chainquery
    tag: linux-x86_64-production
    pullPolicy: IfNotPresent
  service:
    port: 6300
  configurationFile:
    chainqueryconfig.toml: |-
      lbrycrdurl="rpc://lbry:lbry@k8s-lbry-lbrycrd:9245"
      mysqldsn="chainquery:chainquery@tcp(k8s-lbry-chainquery-mysql:3306)/chainquery"
      apimysqldsn="chainquery:chainquery@tcp(k8s-lbry-chainquery-mysql:3306)/chainquery"

lbrynet:
  enabled: false
  image:
    # repository: lbry/lbrynet
    # tag: linux-x86_64-production
    repository: enigmacurry/dump
    tag: lbrynet
    pullPolicy: Always
  service:
    rpcPort: 5279
  persistence:
    enabled: true
    accessMode: ReadWriteOnce
    size: 10Gi
    annotations:
      "helm.sh/resource-policy": keep
  daemon_settings:
    api: 0.0.0.0:5279
    use_upnp: false
    auto_re_reflect_interval: 0
    max_key_fee: {amount: 0, currency: LBC}
    run_reflector_server: false

speech-mysql:
  nameOverride: speech-mysql
  enabled: false
  mysqlUser: speech
  mysqlPassword: speech
  mysqlDatabase: speech
  persistence:
    enabled: true
    accessMode: ReadWriteOnce
    size: 100Gi
    annotations:
      "helm.sh/resource-policy": keep

speech:
  enabled: false
  service:
    name: k8s-lbry-speech
    hostname: "speech.example.com"
    port: 3000
    enableHttps: true
    certificateIssuer: letsencrypt-prod
  image:
    repository: enigmacurry/dump
    tag: spee.ch
    pullPolicy: Always
  persistence:
    enabled: true
    accessMode: ReadWriteOnce
    size: 20Gi
    annotations:
      "helm.sh/resource-policy": keep
  auth:
    masterPassword: speech
    sessionKey: mysecretkeyword
  mysql:
    host: k8s-lbry-speech-mysql
    database: speech
    username: speech
    password: speech
  chainquery:
    host: k8s-lbry-chainquery-mysql
    port: 3306
    timeout: 30
    database: chainquery
    username: chainquery
    password: chainquery
  lbrynet:
    apiHost: k8s-lbry-lbrynet
    apiPort: 5279
    getTimeout: 30
  logger:
    logLevel: verbose
  slack:
    slackWebHook: false
    slackErrorChannel: false
    slackInfoChannel: false
  site:
    analytics:
      googleId:
    assetDefaults:
      description: 'Default Content Description'
      thumbnail: https://spee.ch/0e5d4e8f4086e13f5b9ca3f9648f518e5f524402/speechflag.png
      title: 'Default Content Title'
    details:
      blockListEndpoint: https://api.lbry.com/file/list_blocked
      description: 'A decentralized hosting platform built on LBRY'
      host: https://www.example.com
      ipAddress: ""
      port: 3000
      title: 'My Site'
      twitter: false
    publishing:
      primaryClaimAddress:
      additionalClaimAddresses: []
      approvedChannels: []
      channelClaimBidAmount: 0.1
      closedRegistration: false
      disabled: false
      disabledMessage: 'Default publishing disabled message'
      fileClaimBidAmount: 0.01
      fileSizeLimits:
        application: 50000000
        audio: 50000000
        customByContentType:
          application/octet-stream: 50000000
        image: 50000000
        model: 50000000
        text: 50000000
        video: 50000000
      publishOnlyApproved: false
      publishingChannelWhitelist: []
      serveOnlyApproved: false
      thumbnailChannel:
      thumbnailChannelId:
      uploadDirectory: /data/Uploads
    serving:
      customFileExtensions:
        application/x-mif: mif
        application/x-pn-realaudio: ram
        application/x-python-code: pyc
        application/x-sgml: sgm
        application/x-troff: roff
        application/x-troff-man: man
        application/x-troff-me: me
        application/x-troff-ms: ms
        image/pict: pct
        model/stl: stl
        text/x-go: go
        text/x-python: py
        text/xul: xul
      dynamicFileSizing:
        enabled: true
        maxDimension: 2000
      markdownSettings:
        allowedTypesDescriptions: []
        allowedTypesExample:
          - 'see react-markdown docs'
          - root
          - text
          - break
          - paragraph
          - emphasis
          - strong
          - thematicBreak
          - blockquote
          - delete
          - link
          - image
          - linkReference
          - imageReference
          - table
          - tableHead
          - tableBody
          - tableRow
          - tableCell
          - list
          - listItem
          - heading
          - inlineCode
          - code
          - html
          - parsedHtml
        allowedTypesMain: []
        escapeHtmlDescriptions: true
        escapeHtmlMain: true
        skipHtmlDescriptions: true
        skipHtmlMain: true
    startup:
      performChecks: true
      performUpdates: true


percona:
  #### Prefer mysql over percona for now:
  enabled: false
  # mysqlUser: chainquery
  # mysqlPassword: chainquery
  # mysqlDatabase: chainquery
  # persistence:
  #   enabled: true
  #   accessMode: ReadWriteOnce
  #   size: 100Gi
  # resources:
  #   requests:
  #     memory: 1Gi
  #     cpu: 1


  
